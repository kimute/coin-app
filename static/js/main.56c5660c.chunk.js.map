{"version":3,"sources":["api.ts","atoms.ts","routes/Coins.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","resp","json","fetchCoinTickers","coinId","isDarkAtom","atom","key","default","Container","styled","div","Header","header","Btn","Title","h1","props","theme","accentColor","CoinList","ul","Coin","li","cardBgColor","textColor","Loader","span","Img","img","MiniChart","Coins","setDarkAtom","useSetRecoilState","useQuery","isLoading","data","Helmet","Button","onClick","prev","slice","map","coin","to","pathname","id","state","name","src","symbol","toLowerCase","Chart","isDark","useRecoilValue","endDate","Math","floor","Date","now","startDate","response","fetchCoinHistory","type","series","price","close","options","mode","chart","height","width","background","stroke","curve","dataLabels","enabled","xaxis","axisTicks","show","axisBorder","categories","time_close","yaxis","fill","gradient","gradientToColors","stops","colors","PriceList","PriceItems","Price","tickers","console","log","quotes","USD","toLocaleString","last_updated","percent_change_15m","percent_change_30m","percent_change_1h","percent_change_6h","percent_change_12h","percent_change_24h","percent_change_7d","percent_change_30d","Home","Overview","Description","p","OverviewItem","Tabs","Tab","isActive","useParams","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","InfoData","tickersLoading","tickersData","loading","icon","faHome","rank","description","total_supply","max_supply","path","process","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.56c5660c.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins(){\n    return fetch(`${BASE_URL}/coins`).then((resp) => resp.json());\n}\nexport function fetchCoinInfo(coinId: string){\n    return fetch(`${BASE_URL}/coins/${coinId}`).then((resp) => resp.json());\n}\nexport function fetchCoinTickers(coinId: string){\n    return fetch(`${BASE_URL}/tickers/${coinId}`).then((resp) => resp.json());\n}\n\nexport function fetchCoinHistory(coinId: string){\n    const endDate = Math.floor(Date.now()/1000);\n    const startDate = endDate - 60 *60 *60*7; //get 2weeks data\n    return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then((response) => response.json())\n}","import { atom } from \"recoil\";\n\n\nexport const isDarkAtom = atom({\n    key: \"isDark\",\n    default: false\n})","import { Link, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"react-query\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { fetchCoins, fetchCoinTickers } from \"../api\";\nimport { Helmet } from \"react-helmet\";\nimport { Button } from \"@material-ui/core\";\nimport { useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Container = styled.div`\n   padding: 0px 20px;\n   max-width: 480px;\n   min-width: 378px;\n   margin:0 auto;\n`;\n\nconst Header = styled.header`\n   height: 15vh;\n   display: flex;\n   justify-content: center;\n   aligin-items: center;\n`;\nconst Btn = styled.div`\nposition: absolute;\nmargin-left: 50vh;\n\n`;\nconst Title = styled.h1`\n   margin-top:10px;\n   font-size:48px;\n   color:${props => props.theme.accentColor}\n`;\n\nconst CoinList = styled.ul`\n\n`;\n\nconst Coin = styled.li`\n   background-color:${(props) => props.theme.cardBgColor};\n   display:flex;\n   justify-content:space-between;\n   padding:10px;\n   color:${props => props.theme.textColor};\n   margin-bottom: 10px;\n   border-radius: 15px;\n   border: 1px solid white;\n\n   a {\n       display: flex;\n       align-items: center;\n       padding:20px;\n       transition: color 0.2s ease-in;\n       \n   }\n   &:hover {\n       a {\n           color: ${(props) => props.theme.accentColor};\n       }\n   }\n`;\n\ninterface ICoin {\n    id: string,\n    name: string,\n    symbol: string,\n    rank: number,\n    is_new: boolean,\n    is_active: boolean,\n    type: string\n}\n\nconst Loader = styled.span`\n   text-align: center;\n   display:block;\n`;\nconst Img = styled.img`\n   width:35px;\n   height:35px;\n   margin-right:10px;\n`; \nconst MiniChart = styled.span`\n   margin-top:20px;\n   text-align: center;\n   display:block;\n   font-size:28px;\n   \n\n`;\n\ninterface IcoinProps {}\n\n\nfunction Coins({}:IcoinProps) {\n    const setDarkAtom = useSetRecoilState(isDarkAtom)\n    const toggleDark = () => setDarkAtom((prev) => !prev);\n     //1:uniq name 1:func. name\n    const {isLoading, data} = useQuery<ICoin[]>(\"allCoins\", fetchCoins)\n    /*\n    const [coins, setCoins] = useState<CoinInterface[]>([]);\n    const [loading, setLoding] = useState(true);\n    useEffect(() =>{\n        //start immediately\n        (async() =>{\n            const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n            const json = await response.json();\n            setCoins(json.slice(0,100));\n            setLoding(false);\n        })();\n    }, []);*/\n    return (\n        <>\n        <Container>\n            <Helmet>\n                <title>Coin</title>\n            </Helmet>\n            <Header>\n                <Title>Coins</Title>\n                <Btn>\n                <Button onClick={toggleDark}>Switch</Button>\n                </Btn>\n                \n            </Header>\n            {isLoading ? <Loader>Loding...</Loader>:(<CoinList>\n                {data?.slice(0, 100).map(coin =>(\n                <Coin key={coin.id}>\n                    <Link to={{\n                        pathname:`/${coin.id}`,\n                        state: {name:coin.name}\n                    }}>\n                        <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}/>\n                        {coin.name}\n                    </Link>\n                    <MiniChart>\n                      &rarr;\n                    </MiniChart>  \n                </Coin>\n                ))}\n                \n            </CoinList>)}\n        </Container>\n         </>\n        \n    );\n}\nexport default Coins;","import { useQuery } from \"react-query\";\nimport {fetchCoinHistory} from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface IHistory {\n    time_open: string;\n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\n\ninterface ChartProps {\n    coinId: string;\n}\n\nfunction Chart({coinId}:ChartProps){\n    const isDark = useRecoilValue(isDarkAtom)\n    const { isLoading, data } = useQuery<IHistory[]>([\"ohlcv\", coinId],()=>fetchCoinHistory(coinId))\n    return (\n       <div>\n           {isLoading ? (\n               \"Loading chart....\"\n               ) : (\n                 <ApexChart \n                   type=\"line\" \n                   series={[\n                       {\n                           name: \"coin closing Price\",\n                           data: data?.map(price =>Math.floor(price.close))\n                       }]}\n                   options={{\n                       theme: {\n                           mode: isDark ? \"dark\" : \"light\"\n                       },\n                       chart: { \n                           height:300, \n                           width:500,\n                           background: \"transparent\"\n                        },\n                        stroke:{\n                            curve: \"smooth\",\n                            width: 4\n                        },\n                        dataLabels: {\n                            enabled: false\n                          },\n                        xaxis: {\n                            axisTicks: {show: false},\n                            axisBorder: { show: false },\n                            type: \"datetime\",\n                            categories: data?.map(price =>(price.time_close).slice(5,10)),\n                            \n                        },\n                        yaxis:{\n                            axisBorder: { show: false },\n                            axisTicks:  { show: false},\n                            \n                        },\n                        fill: {\n                            type: \"gradient\",\n                            gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n                          },\n                          colors: [\"#0fbcf9\"],\n                            \n                        }\n                }/>)}</div>);\n}\n\nexport default Chart;","import styled from \"styled-components\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinTickers } from \"../api\";\n\ninterface IPriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n      USD: {\n        ath_date: string;\n        ath_price: number;\n        market_cap: number;\n        market_cap_change_24h: number;\n        percent_change_1h: number;\n        percent_change_1y: number;\n        percent_change_6h: number;\n        percent_change_7d: number;\n        percent_change_12h: number;\n        percent_change_15m: number;\n        percent_change_24h: number;\n        percent_change_30d: number;\n        percent_change_30m: number;\n        percent_from_price_ath: number;\n        price: number;\n        volume_24h: number;\n        volume_24h_change_24h: number;\n      };\n    };\n  }\n\n\ninterface PriceProps {\n    coinId: string;\n}\n\nconst Loader = styled.span`\n   text-align: center;\n   display:block;\n`;\nconst PriceList = styled.ul``;\nconst PriceItems = styled.li`\n   background-color:rgba(0, 0, 0, 0.5);\n   display:flex;\n   padding:10px;\n   justify-content:space-between;\n   margin-bottom: 10px;\n   border-radius: 15px;\n   span:last-child {\n   color:${props =>props.theme.accentColor};\n   }\n`;\n\nfunction Price({coinId}:PriceProps){\n    const {isLoading, data:tickers} =useQuery<IPriceData>([\"priceInfo\", coinId],() =>fetchCoinTickers(coinId) )\n    console.log(\"!!!!!!!!!!!!!!!!!!1\",tickers)\n    return (\n        <>\n        {isLoading ? <Loader>Loading..</Loader>:(\n            <PriceList>\n                <PriceItems>\n                    <span>Price:</span>\n                    <span>${tickers?.quotes.USD.price.toLocaleString('en-US')}</span>\n                </PriceItems>\n                <PriceItems>\n                     <span>Last updated:</span>\n                     <span>{tickers?.last_updated}</span>\n                </PriceItems>\n                <PriceItems>\n                    <span>Price change ratio. in 15 min:</span>\n                    <span>{tickers?.quotes.USD.percent_change_15m}</span>\n                </PriceItems>\n                <PriceItems>\n                    <span>Price change ratio. in 30 min:</span>\n                    <span>{tickers?.quotes.USD.percent_change_30m}</span>\n                </PriceItems>\n                <PriceItems>\n                    <span>Price change ratio. in 1h:</span>\n                    <span>{tickers?.quotes.USD.percent_change_1h}</span>\n                </PriceItems>\n                <PriceItems>\n                    <span>Price change ratio. in 6h:</span>\n                    <span>{tickers?.quotes.USD.percent_change_6h}</span>\n                </PriceItems>\n                <PriceItems>\n                    <span>Price change ratio. in 12h:</span>\n                    <span>{tickers?.quotes.USD.percent_change_12h}</span>\n                </PriceItems>\n                <PriceItems>\n                    <span>Price change ratio. in 24h:</span>\n                    <span>{tickers?.quotes.USD.percent_change_24h}</span>\n                </PriceItems>\n                <PriceItems>\n                    <span>Price change ratio. in 7days:</span>\n                    <span>{tickers?.quotes.USD.percent_change_7d}</span>\n                </PriceItems>\n                <PriceItems>\n                    <span>Price change ratio. in 30days:</span>\n                    <span>{tickers?.quotes.USD.percent_change_30d}</span>\n                </PriceItems>\n                \n            </PriceList>\n        )}\n        </>\n    )\n\n}\n\nexport default Price;","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Helmet} from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { useParams, useRouteMatch } from \"react-router\";\nimport { Switch,Route, useLocation, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Chart from \"./Chart\";\nimport Price  from \"./Price\";\n\nconst Container = styled.div`\n   padding: 0px 20px;\n   max-width: 480px;\n   min-width: 378px;\n   margin:0 auto;\n`;\nconst Home = styled.div`\n   display:flex;\n   justify-content: center;\n   aligin-items: center;\n\n    font-size: 20px;\n    margin: 12px 60vh 0px 0px;\n   \n`;\n\nconst Header = styled.header`\n   height: 15vh;\n   display: flex;\n   justify-content: center;\n   aligin-items: center;\n`;\n\nconst Title = styled.h1`\n   font-size:48px;\n   color:${props => props.theme.accentColor}\n`;\n\nconst Loader = styled.span`\n   text-align: center;\n   display:block;\n`;\n\nconst Overview = styled.div`;\n   display: flex;\n   justify-content: space-between;\n   background-color: rgba(0, 0, 0, 0.5);\n   padding:10px 20px;\n   border-radius: 10px;\n`;\nconst Description = styled.p`\n   display:flex;\n   margin: 20px 5px;\n`;\nconst OverviewItem = styled.div`\n   display: flex;\n   flex-direction: column;\n   span:first-child {\n       font-size: 10px;\n       font-weight: 400;\n       text-transform: uppercase;\n       margin-bottom: 5px;\n       \n   }\n`;\n\nconst Tabs = styled.div`\n   display: grid;\n   grid-template-columns: repeat(2, 1fr);\n   margin: 25px 0px;\n   gap: 10px;\n`;\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  color: ${(props) => props.isActive ? props.theme.accentColor : props.theme.textColor};\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 12px 0px;\n  border-radius: 10px;\n  a {\n      display: block;\n  }\n`;\n\ninterface RouteParams {\n    coinId: string;\n}\n\ninterface RouteState {\n    name: string;\n}\n\ninterface InfoData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    is_new: boolean;\n    is_active: boolean;\n    type: string;\n    description: string;\n    message: string;\n    open_source: boolean;\n    started_at: string;\n    development_status: string;\n    hardware_wallet: boolean;\n    proof_type: string;\n    org_structure: string;\n    hash_algorithm: string;\n    first_data_at: string;\n    last_data_at: string;\n}\n\ninterface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n      USD: {\n        ath_date: string;\n        ath_price: number;\n        market_cap: number;\n        market_cap_change_24h: number;\n        percent_change_1h: number;\n        percent_change_1y: number;\n        percent_change_6h: number;\n        percent_change_7d: number;\n        percent_change_12h: number;\n        percent_change_15m: number;\n        percent_change_24h: number;\n        percent_change_30d: number;\n        percent_change_30m: number;\n        percent_from_price_ath: number;\n        price: number;\n        volume_24h: number;\n        volume_24h_change_24h: number;\n      };\n    };\n  }\ninterface IcoinProps {}\n\nfunction Coin({}:IcoinProps) {\n    const {coinId} = useParams<RouteParams>();\n    const {state} =useLocation<RouteState>();\n    const priceMatch = useRouteMatch(\"/:coinId/price\");\n    const chartMatch = useRouteMatch(\"/:coinId/chart\");\n    const {isLoading: infoLoading, data: InfoData} = useQuery<InfoData>([\"info\", coinId], () => fetchCoinInfo(coinId));\n    const {isLoading: tickersLoading, data: tickersData} = useQuery<PriceData>([\"tickers\", coinId], () => fetchCoinTickers(coinId))\n    \n    //const params = useParams();\n    //console.log(params);\n    \n    /*const [info, setInfo] = useState<InfoData>();\n    const [priceinfo, setPriceInfo] = useState<PriceData>();\n    const [loading, setLoading] = useState(true);\n    \n\n    useEffect(()=>{\n        (async() =>{\n            const infoData = await (\n                await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)).json();\n            console.log(infoData);\n            const priceData = await (\n                    await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)).json();\n            console.log(priceData);\n           //const {quotes:{USD:price}} = priceData\n           //console.log(price.price)\n           setInfo(infoData);\n           setPriceInfo(priceData);\n           setLoading(false);\n        })();\n    },[coinId]);*/\n    const loading = infoLoading || tickersLoading;\n    \n    return (\n        <>\n        <Home>\n                <Link to='/'>\n                   <FontAwesomeIcon icon={faHome} />\n                </Link>\n            </Home>\n        <Container>\n            <Helmet>\n                <title>\n                { state?.name ? state.name : loading ? \"Loading...\" : InfoData?.name}\n                </title>\n            </Helmet>\n            <Header>\n                <Title>{ state?.name ? state.name : loading ? \"Loading...\" : InfoData?.name}</Title>\n            </Header>\n            {loading ? (<Loader>Loading...</Loader>) : (\n                <>\n                <Overview>\n                    <OverviewItem>\n                        <span>Rank</span>\n                        <span>{InfoData?.rank}</span>\n                    </OverviewItem>\n                    <OverviewItem>\n                        <span>SYMBOL</span>\n                        <span>{InfoData?.symbol}</span>\n                    </OverviewItem>\n                    <OverviewItem>\n                        <span>PRICE NOW</span> \n                        <span>${(tickersData?.quotes.USD.price.toLocaleString('en-US'))}</span>\n                    </OverviewItem>\n                </Overview>\n                <Description>\n                    {InfoData?.description}\n                </Description>\n                <Overview>\n                    <OverviewItem>\n                        <span>Total Supply:</span>\n                        <span>{(tickersData?.total_supply)?.toLocaleString('en-US')}</span>\n                    </OverviewItem>\n                    <OverviewItem>\n                        <span>Max Supply:</span>\n                        <span>{(tickersData?.max_supply)?.toLocaleString('en-US')}</span>\n                    </OverviewItem>\n                </Overview>\n                <Tabs>\n                    <Tab isActive={chartMatch !== null}>\n                        <Link to={`/${coinId}/chart`}>Chart</Link>\n                    </Tab>\n                    <Tab isActive={priceMatch\n                     !== null}>\n                        <Link to={`/${coinId}/price`}>Price</Link>\n                    </Tab>\n                </Tabs>\n                <Switch>\n                    <Route path={`${process.env.PUBLIC_URL}/:coinId/price`}>\n                        <Price coinId={coinId}/>\n                    </Route>\n                    <Route path={`${process.env.PUBLIC_URL}/:coinId/chart`}>\n                        <Chart coinId={coinId}/>\n                    </Route>\n                </Switch>\n                </>\n            )}\n        </Container>\n        </>\n    );\n}\nexport default Coin;\n","import {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Coins from \"./routes/Coins\";\nimport Coin from \"./routes/Coin\";\n\ninterface IrouterProps {}\n\nfunction Router({}:IrouterProps){\n    return <BrowserRouter>\n        <Switch>\n            <Route path={`${process.env.PUBLIC_URL}/:coinId`}>\n                <Coin/>\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/`}>\n                <Coins />\n            </Route>\n        </Switch>\n    </BrowserRouter>\n\n}\n\nexport default Router;","import { DefaultTheme } from \"styled-components\";\n\n// DefaultTheme from styled.d.ts that define types\nexport const darkTheme: DefaultTheme = {\n    bgColor: \"#2f3640\",\n    textColor: \"white\",\n    accentColor: \"#a55eea\",\n    cardBgColor: \"transparent\"\n};\n\n\nexport const lightTheme: DefaultTheme = {\n    bgColor:\"whitesmoke\",\n    textColor: \"black\",\n    accentColor: \"#a55eea\",\n    cardBgColor: \"white\"\n};","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { useState } from \"react\";\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport Router from \"./Router\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport Button from '@material-ui/core/Button';\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\n//use style global\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom)\n  //const [isDark, setDark] = useState(false);\n  //const toggleDark = () => setDark((current) => !current)\n  return (\n     <>\n      <ThemeProvider theme={isDark ? darkTheme :lightTheme}>\n        <GlobalStyle />\n        <Router/>\n        <ReactQueryDevtools initialIsOpen={true}/>\n      </ThemeProvider>  \n      </>\n  );\n\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\n// react query\nconst queryClient = new QueryClient();\n// themeProvide can access theme\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}